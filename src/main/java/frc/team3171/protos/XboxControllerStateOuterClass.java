// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: frc/team3171/protos/xbox_controller_state.proto

// Protobuf Java Version: 3.25.3
package frc.team3171.protos;

public final class XboxControllerStateOuterClass {
  private XboxControllerStateOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface XboxControllerStateOrBuilder extends
      // @@protoc_insertion_point(interface_extends:frc.team3171.protos.XboxControllerState)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional double leftX = 1;</code>
     * @return Whether the leftX field is set.
     */
    boolean hasLeftX();
    /**
     * <code>optional double leftX = 1;</code>
     * @return The leftX.
     */
    double getLeftX();

    /**
     * <code>optional double leftY = 2;</code>
     * @return Whether the leftY field is set.
     */
    boolean hasLeftY();
    /**
     * <code>optional double leftY = 2;</code>
     * @return The leftY.
     */
    double getLeftY();

    /**
     * <code>optional double rightX = 3;</code>
     * @return Whether the rightX field is set.
     */
    boolean hasRightX();
    /**
     * <code>optional double rightX = 3;</code>
     * @return The rightX.
     */
    double getRightX();

    /**
     * <code>optional double rightY = 4;</code>
     * @return Whether the rightY field is set.
     */
    boolean hasRightY();
    /**
     * <code>optional double rightY = 4;</code>
     * @return The rightY.
     */
    double getRightY();

    /**
     * <code>optional double leftTriggerAxis = 5;</code>
     * @return Whether the leftTriggerAxis field is set.
     */
    boolean hasLeftTriggerAxis();
    /**
     * <code>optional double leftTriggerAxis = 5;</code>
     * @return The leftTriggerAxis.
     */
    double getLeftTriggerAxis();

    /**
     * <code>optional double rightTriggerAxis = 6;</code>
     * @return Whether the rightTriggerAxis field is set.
     */
    boolean hasRightTriggerAxis();
    /**
     * <code>optional double rightTriggerAxis = 6;</code>
     * @return The rightTriggerAxis.
     */
    double getRightTriggerAxis();

    /**
     * <code>optional int32 pov = 7;</code>
     * @return Whether the pov field is set.
     */
    boolean hasPov();
    /**
     * <code>optional int32 pov = 7;</code>
     * @return The pov.
     */
    int getPov();

    /**
     * <code>optional bool aButton = 8;</code>
     * @return Whether the aButton field is set.
     */
    boolean hasAButton();
    /**
     * <code>optional bool aButton = 8;</code>
     * @return The aButton.
     */
    boolean getAButton();

    /**
     * <code>optional bool bButton = 9;</code>
     * @return Whether the bButton field is set.
     */
    boolean hasBButton();
    /**
     * <code>optional bool bButton = 9;</code>
     * @return The bButton.
     */
    boolean getBButton();

    /**
     * <code>optional bool xButton = 10;</code>
     * @return Whether the xButton field is set.
     */
    boolean hasXButton();
    /**
     * <code>optional bool xButton = 10;</code>
     * @return The xButton.
     */
    boolean getXButton();

    /**
     * <code>optional bool yButton = 11;</code>
     * @return Whether the yButton field is set.
     */
    boolean hasYButton();
    /**
     * <code>optional bool yButton = 11;</code>
     * @return The yButton.
     */
    boolean getYButton();

    /**
     * <code>optional bool startButton = 12;</code>
     * @return Whether the startButton field is set.
     */
    boolean hasStartButton();
    /**
     * <code>optional bool startButton = 12;</code>
     * @return The startButton.
     */
    boolean getStartButton();

    /**
     * <code>optional bool backButton = 13;</code>
     * @return Whether the backButton field is set.
     */
    boolean hasBackButton();
    /**
     * <code>optional bool backButton = 13;</code>
     * @return The backButton.
     */
    boolean getBackButton();

    /**
     * <code>optional bool leftBumper = 14;</code>
     * @return Whether the leftBumper field is set.
     */
    boolean hasLeftBumper();
    /**
     * <code>optional bool leftBumper = 14;</code>
     * @return The leftBumper.
     */
    boolean getLeftBumper();

    /**
     * <code>optional bool rightBumper = 15;</code>
     * @return Whether the rightBumper field is set.
     */
    boolean hasRightBumper();
    /**
     * <code>optional bool rightBumper = 15;</code>
     * @return The rightBumper.
     */
    boolean getRightBumper();

    /**
     * <code>optional bool leftStickButton = 16;</code>
     * @return Whether the leftStickButton field is set.
     */
    boolean hasLeftStickButton();
    /**
     * <code>optional bool leftStickButton = 16;</code>
     * @return The leftStickButton.
     */
    boolean getLeftStickButton();

    /**
     * <code>optional bool rightStickButton = 17;</code>
     * @return Whether the rightStickButton field is set.
     */
    boolean hasRightStickButton();
    /**
     * <code>optional bool rightStickButton = 17;</code>
     * @return The rightStickButton.
     */
    boolean getRightStickButton();
  }
  /**
   * Protobuf type {@code frc.team3171.protos.XboxControllerState}
   */
  public static final class XboxControllerState extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:frc.team3171.protos.XboxControllerState)
      XboxControllerStateOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use XboxControllerState.newBuilder() to construct.
    private XboxControllerState(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private XboxControllerState() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new XboxControllerState();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return frc.team3171.protos.XboxControllerStateOuterClass.internal_static_frc_team3171_protos_XboxControllerState_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return frc.team3171.protos.XboxControllerStateOuterClass.internal_static_frc_team3171_protos_XboxControllerState_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              frc.team3171.protos.XboxControllerStateOuterClass.XboxControllerState.class, frc.team3171.protos.XboxControllerStateOuterClass.XboxControllerState.Builder.class);
    }

    private int bitField0_;
    public static final int LEFTX_FIELD_NUMBER = 1;
    private double leftX_ = 0D;
    /**
     * <code>optional double leftX = 1;</code>
     * @return Whether the leftX field is set.
     */
    @java.lang.Override
    public boolean hasLeftX() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional double leftX = 1;</code>
     * @return The leftX.
     */
    @java.lang.Override
    public double getLeftX() {
      return leftX_;
    }

    public static final int LEFTY_FIELD_NUMBER = 2;
    private double leftY_ = 0D;
    /**
     * <code>optional double leftY = 2;</code>
     * @return Whether the leftY field is set.
     */
    @java.lang.Override
    public boolean hasLeftY() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional double leftY = 2;</code>
     * @return The leftY.
     */
    @java.lang.Override
    public double getLeftY() {
      return leftY_;
    }

    public static final int RIGHTX_FIELD_NUMBER = 3;
    private double rightX_ = 0D;
    /**
     * <code>optional double rightX = 3;</code>
     * @return Whether the rightX field is set.
     */
    @java.lang.Override
    public boolean hasRightX() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional double rightX = 3;</code>
     * @return The rightX.
     */
    @java.lang.Override
    public double getRightX() {
      return rightX_;
    }

    public static final int RIGHTY_FIELD_NUMBER = 4;
    private double rightY_ = 0D;
    /**
     * <code>optional double rightY = 4;</code>
     * @return Whether the rightY field is set.
     */
    @java.lang.Override
    public boolean hasRightY() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>optional double rightY = 4;</code>
     * @return The rightY.
     */
    @java.lang.Override
    public double getRightY() {
      return rightY_;
    }

    public static final int LEFTTRIGGERAXIS_FIELD_NUMBER = 5;
    private double leftTriggerAxis_ = 0D;
    /**
     * <code>optional double leftTriggerAxis = 5;</code>
     * @return Whether the leftTriggerAxis field is set.
     */
    @java.lang.Override
    public boolean hasLeftTriggerAxis() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <code>optional double leftTriggerAxis = 5;</code>
     * @return The leftTriggerAxis.
     */
    @java.lang.Override
    public double getLeftTriggerAxis() {
      return leftTriggerAxis_;
    }

    public static final int RIGHTTRIGGERAXIS_FIELD_NUMBER = 6;
    private double rightTriggerAxis_ = 0D;
    /**
     * <code>optional double rightTriggerAxis = 6;</code>
     * @return Whether the rightTriggerAxis field is set.
     */
    @java.lang.Override
    public boolean hasRightTriggerAxis() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <code>optional double rightTriggerAxis = 6;</code>
     * @return The rightTriggerAxis.
     */
    @java.lang.Override
    public double getRightTriggerAxis() {
      return rightTriggerAxis_;
    }

    public static final int POV_FIELD_NUMBER = 7;
    private int pov_ = 0;
    /**
     * <code>optional int32 pov = 7;</code>
     * @return Whether the pov field is set.
     */
    @java.lang.Override
    public boolean hasPov() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <code>optional int32 pov = 7;</code>
     * @return The pov.
     */
    @java.lang.Override
    public int getPov() {
      return pov_;
    }

    public static final int ABUTTON_FIELD_NUMBER = 8;
    private boolean aButton_ = false;
    /**
     * <code>optional bool aButton = 8;</code>
     * @return Whether the aButton field is set.
     */
    @java.lang.Override
    public boolean hasAButton() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     * <code>optional bool aButton = 8;</code>
     * @return The aButton.
     */
    @java.lang.Override
    public boolean getAButton() {
      return aButton_;
    }

    public static final int BBUTTON_FIELD_NUMBER = 9;
    private boolean bButton_ = false;
    /**
     * <code>optional bool bButton = 9;</code>
     * @return Whether the bButton field is set.
     */
    @java.lang.Override
    public boolean hasBButton() {
      return ((bitField0_ & 0x00000100) != 0);
    }
    /**
     * <code>optional bool bButton = 9;</code>
     * @return The bButton.
     */
    @java.lang.Override
    public boolean getBButton() {
      return bButton_;
    }

    public static final int XBUTTON_FIELD_NUMBER = 10;
    private boolean xButton_ = false;
    /**
     * <code>optional bool xButton = 10;</code>
     * @return Whether the xButton field is set.
     */
    @java.lang.Override
    public boolean hasXButton() {
      return ((bitField0_ & 0x00000200) != 0);
    }
    /**
     * <code>optional bool xButton = 10;</code>
     * @return The xButton.
     */
    @java.lang.Override
    public boolean getXButton() {
      return xButton_;
    }

    public static final int YBUTTON_FIELD_NUMBER = 11;
    private boolean yButton_ = false;
    /**
     * <code>optional bool yButton = 11;</code>
     * @return Whether the yButton field is set.
     */
    @java.lang.Override
    public boolean hasYButton() {
      return ((bitField0_ & 0x00000400) != 0);
    }
    /**
     * <code>optional bool yButton = 11;</code>
     * @return The yButton.
     */
    @java.lang.Override
    public boolean getYButton() {
      return yButton_;
    }

    public static final int STARTBUTTON_FIELD_NUMBER = 12;
    private boolean startButton_ = false;
    /**
     * <code>optional bool startButton = 12;</code>
     * @return Whether the startButton field is set.
     */
    @java.lang.Override
    public boolean hasStartButton() {
      return ((bitField0_ & 0x00000800) != 0);
    }
    /**
     * <code>optional bool startButton = 12;</code>
     * @return The startButton.
     */
    @java.lang.Override
    public boolean getStartButton() {
      return startButton_;
    }

    public static final int BACKBUTTON_FIELD_NUMBER = 13;
    private boolean backButton_ = false;
    /**
     * <code>optional bool backButton = 13;</code>
     * @return Whether the backButton field is set.
     */
    @java.lang.Override
    public boolean hasBackButton() {
      return ((bitField0_ & 0x00001000) != 0);
    }
    /**
     * <code>optional bool backButton = 13;</code>
     * @return The backButton.
     */
    @java.lang.Override
    public boolean getBackButton() {
      return backButton_;
    }

    public static final int LEFTBUMPER_FIELD_NUMBER = 14;
    private boolean leftBumper_ = false;
    /**
     * <code>optional bool leftBumper = 14;</code>
     * @return Whether the leftBumper field is set.
     */
    @java.lang.Override
    public boolean hasLeftBumper() {
      return ((bitField0_ & 0x00002000) != 0);
    }
    /**
     * <code>optional bool leftBumper = 14;</code>
     * @return The leftBumper.
     */
    @java.lang.Override
    public boolean getLeftBumper() {
      return leftBumper_;
    }

    public static final int RIGHTBUMPER_FIELD_NUMBER = 15;
    private boolean rightBumper_ = false;
    /**
     * <code>optional bool rightBumper = 15;</code>
     * @return Whether the rightBumper field is set.
     */
    @java.lang.Override
    public boolean hasRightBumper() {
      return ((bitField0_ & 0x00004000) != 0);
    }
    /**
     * <code>optional bool rightBumper = 15;</code>
     * @return The rightBumper.
     */
    @java.lang.Override
    public boolean getRightBumper() {
      return rightBumper_;
    }

    public static final int LEFTSTICKBUTTON_FIELD_NUMBER = 16;
    private boolean leftStickButton_ = false;
    /**
     * <code>optional bool leftStickButton = 16;</code>
     * @return Whether the leftStickButton field is set.
     */
    @java.lang.Override
    public boolean hasLeftStickButton() {
      return ((bitField0_ & 0x00008000) != 0);
    }
    /**
     * <code>optional bool leftStickButton = 16;</code>
     * @return The leftStickButton.
     */
    @java.lang.Override
    public boolean getLeftStickButton() {
      return leftStickButton_;
    }

    public static final int RIGHTSTICKBUTTON_FIELD_NUMBER = 17;
    private boolean rightStickButton_ = false;
    /**
     * <code>optional bool rightStickButton = 17;</code>
     * @return Whether the rightStickButton field is set.
     */
    @java.lang.Override
    public boolean hasRightStickButton() {
      return ((bitField0_ & 0x00010000) != 0);
    }
    /**
     * <code>optional bool rightStickButton = 17;</code>
     * @return The rightStickButton.
     */
    @java.lang.Override
    public boolean getRightStickButton() {
      return rightStickButton_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeDouble(1, leftX_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeDouble(2, leftY_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeDouble(3, rightX_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeDouble(4, rightY_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeDouble(5, leftTriggerAxis_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        output.writeDouble(6, rightTriggerAxis_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        output.writeInt32(7, pov_);
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        output.writeBool(8, aButton_);
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        output.writeBool(9, bButton_);
      }
      if (((bitField0_ & 0x00000200) != 0)) {
        output.writeBool(10, xButton_);
      }
      if (((bitField0_ & 0x00000400) != 0)) {
        output.writeBool(11, yButton_);
      }
      if (((bitField0_ & 0x00000800) != 0)) {
        output.writeBool(12, startButton_);
      }
      if (((bitField0_ & 0x00001000) != 0)) {
        output.writeBool(13, backButton_);
      }
      if (((bitField0_ & 0x00002000) != 0)) {
        output.writeBool(14, leftBumper_);
      }
      if (((bitField0_ & 0x00004000) != 0)) {
        output.writeBool(15, rightBumper_);
      }
      if (((bitField0_ & 0x00008000) != 0)) {
        output.writeBool(16, leftStickButton_);
      }
      if (((bitField0_ & 0x00010000) != 0)) {
        output.writeBool(17, rightStickButton_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, leftX_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, leftY_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, rightX_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, rightY_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, leftTriggerAxis_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(6, rightTriggerAxis_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, pov_);
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(8, aButton_);
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(9, bButton_);
      }
      if (((bitField0_ & 0x00000200) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(10, xButton_);
      }
      if (((bitField0_ & 0x00000400) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(11, yButton_);
      }
      if (((bitField0_ & 0x00000800) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(12, startButton_);
      }
      if (((bitField0_ & 0x00001000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(13, backButton_);
      }
      if (((bitField0_ & 0x00002000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(14, leftBumper_);
      }
      if (((bitField0_ & 0x00004000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(15, rightBumper_);
      }
      if (((bitField0_ & 0x00008000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(16, leftStickButton_);
      }
      if (((bitField0_ & 0x00010000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(17, rightStickButton_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof frc.team3171.protos.XboxControllerStateOuterClass.XboxControllerState)) {
        return super.equals(obj);
      }
      frc.team3171.protos.XboxControllerStateOuterClass.XboxControllerState other = (frc.team3171.protos.XboxControllerStateOuterClass.XboxControllerState) obj;

      if (hasLeftX() != other.hasLeftX()) return false;
      if (hasLeftX()) {
        if (java.lang.Double.doubleToLongBits(getLeftX())
            != java.lang.Double.doubleToLongBits(
                other.getLeftX())) return false;
      }
      if (hasLeftY() != other.hasLeftY()) return false;
      if (hasLeftY()) {
        if (java.lang.Double.doubleToLongBits(getLeftY())
            != java.lang.Double.doubleToLongBits(
                other.getLeftY())) return false;
      }
      if (hasRightX() != other.hasRightX()) return false;
      if (hasRightX()) {
        if (java.lang.Double.doubleToLongBits(getRightX())
            != java.lang.Double.doubleToLongBits(
                other.getRightX())) return false;
      }
      if (hasRightY() != other.hasRightY()) return false;
      if (hasRightY()) {
        if (java.lang.Double.doubleToLongBits(getRightY())
            != java.lang.Double.doubleToLongBits(
                other.getRightY())) return false;
      }
      if (hasLeftTriggerAxis() != other.hasLeftTriggerAxis()) return false;
      if (hasLeftTriggerAxis()) {
        if (java.lang.Double.doubleToLongBits(getLeftTriggerAxis())
            != java.lang.Double.doubleToLongBits(
                other.getLeftTriggerAxis())) return false;
      }
      if (hasRightTriggerAxis() != other.hasRightTriggerAxis()) return false;
      if (hasRightTriggerAxis()) {
        if (java.lang.Double.doubleToLongBits(getRightTriggerAxis())
            != java.lang.Double.doubleToLongBits(
                other.getRightTriggerAxis())) return false;
      }
      if (hasPov() != other.hasPov()) return false;
      if (hasPov()) {
        if (getPov()
            != other.getPov()) return false;
      }
      if (hasAButton() != other.hasAButton()) return false;
      if (hasAButton()) {
        if (getAButton()
            != other.getAButton()) return false;
      }
      if (hasBButton() != other.hasBButton()) return false;
      if (hasBButton()) {
        if (getBButton()
            != other.getBButton()) return false;
      }
      if (hasXButton() != other.hasXButton()) return false;
      if (hasXButton()) {
        if (getXButton()
            != other.getXButton()) return false;
      }
      if (hasYButton() != other.hasYButton()) return false;
      if (hasYButton()) {
        if (getYButton()
            != other.getYButton()) return false;
      }
      if (hasStartButton() != other.hasStartButton()) return false;
      if (hasStartButton()) {
        if (getStartButton()
            != other.getStartButton()) return false;
      }
      if (hasBackButton() != other.hasBackButton()) return false;
      if (hasBackButton()) {
        if (getBackButton()
            != other.getBackButton()) return false;
      }
      if (hasLeftBumper() != other.hasLeftBumper()) return false;
      if (hasLeftBumper()) {
        if (getLeftBumper()
            != other.getLeftBumper()) return false;
      }
      if (hasRightBumper() != other.hasRightBumper()) return false;
      if (hasRightBumper()) {
        if (getRightBumper()
            != other.getRightBumper()) return false;
      }
      if (hasLeftStickButton() != other.hasLeftStickButton()) return false;
      if (hasLeftStickButton()) {
        if (getLeftStickButton()
            != other.getLeftStickButton()) return false;
      }
      if (hasRightStickButton() != other.hasRightStickButton()) return false;
      if (hasRightStickButton()) {
        if (getRightStickButton()
            != other.getRightStickButton()) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasLeftX()) {
        hash = (37 * hash) + LEFTX_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getLeftX()));
      }
      if (hasLeftY()) {
        hash = (37 * hash) + LEFTY_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getLeftY()));
      }
      if (hasRightX()) {
        hash = (37 * hash) + RIGHTX_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getRightX()));
      }
      if (hasRightY()) {
        hash = (37 * hash) + RIGHTY_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getRightY()));
      }
      if (hasLeftTriggerAxis()) {
        hash = (37 * hash) + LEFTTRIGGERAXIS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getLeftTriggerAxis()));
      }
      if (hasRightTriggerAxis()) {
        hash = (37 * hash) + RIGHTTRIGGERAXIS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getRightTriggerAxis()));
      }
      if (hasPov()) {
        hash = (37 * hash) + POV_FIELD_NUMBER;
        hash = (53 * hash) + getPov();
      }
      if (hasAButton()) {
        hash = (37 * hash) + ABUTTON_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getAButton());
      }
      if (hasBButton()) {
        hash = (37 * hash) + BBUTTON_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getBButton());
      }
      if (hasXButton()) {
        hash = (37 * hash) + XBUTTON_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getXButton());
      }
      if (hasYButton()) {
        hash = (37 * hash) + YBUTTON_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getYButton());
      }
      if (hasStartButton()) {
        hash = (37 * hash) + STARTBUTTON_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getStartButton());
      }
      if (hasBackButton()) {
        hash = (37 * hash) + BACKBUTTON_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getBackButton());
      }
      if (hasLeftBumper()) {
        hash = (37 * hash) + LEFTBUMPER_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getLeftBumper());
      }
      if (hasRightBumper()) {
        hash = (37 * hash) + RIGHTBUMPER_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getRightBumper());
      }
      if (hasLeftStickButton()) {
        hash = (37 * hash) + LEFTSTICKBUTTON_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getLeftStickButton());
      }
      if (hasRightStickButton()) {
        hash = (37 * hash) + RIGHTSTICKBUTTON_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getRightStickButton());
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static frc.team3171.protos.XboxControllerStateOuterClass.XboxControllerState parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static frc.team3171.protos.XboxControllerStateOuterClass.XboxControllerState parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static frc.team3171.protos.XboxControllerStateOuterClass.XboxControllerState parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static frc.team3171.protos.XboxControllerStateOuterClass.XboxControllerState parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static frc.team3171.protos.XboxControllerStateOuterClass.XboxControllerState parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static frc.team3171.protos.XboxControllerStateOuterClass.XboxControllerState parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static frc.team3171.protos.XboxControllerStateOuterClass.XboxControllerState parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static frc.team3171.protos.XboxControllerStateOuterClass.XboxControllerState parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static frc.team3171.protos.XboxControllerStateOuterClass.XboxControllerState parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static frc.team3171.protos.XboxControllerStateOuterClass.XboxControllerState parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static frc.team3171.protos.XboxControllerStateOuterClass.XboxControllerState parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static frc.team3171.protos.XboxControllerStateOuterClass.XboxControllerState parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(frc.team3171.protos.XboxControllerStateOuterClass.XboxControllerState prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code frc.team3171.protos.XboxControllerState}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:frc.team3171.protos.XboxControllerState)
        frc.team3171.protos.XboxControllerStateOuterClass.XboxControllerStateOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return frc.team3171.protos.XboxControllerStateOuterClass.internal_static_frc_team3171_protos_XboxControllerState_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return frc.team3171.protos.XboxControllerStateOuterClass.internal_static_frc_team3171_protos_XboxControllerState_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                frc.team3171.protos.XboxControllerStateOuterClass.XboxControllerState.class, frc.team3171.protos.XboxControllerStateOuterClass.XboxControllerState.Builder.class);
      }

      // Construct using frc.team3171.protos.XboxControllerStateOuterClass.XboxControllerState.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        leftX_ = 0D;
        leftY_ = 0D;
        rightX_ = 0D;
        rightY_ = 0D;
        leftTriggerAxis_ = 0D;
        rightTriggerAxis_ = 0D;
        pov_ = 0;
        aButton_ = false;
        bButton_ = false;
        xButton_ = false;
        yButton_ = false;
        startButton_ = false;
        backButton_ = false;
        leftBumper_ = false;
        rightBumper_ = false;
        leftStickButton_ = false;
        rightStickButton_ = false;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return frc.team3171.protos.XboxControllerStateOuterClass.internal_static_frc_team3171_protos_XboxControllerState_descriptor;
      }

      @java.lang.Override
      public frc.team3171.protos.XboxControllerStateOuterClass.XboxControllerState getDefaultInstanceForType() {
        return frc.team3171.protos.XboxControllerStateOuterClass.XboxControllerState.getDefaultInstance();
      }

      @java.lang.Override
      public frc.team3171.protos.XboxControllerStateOuterClass.XboxControllerState build() {
        frc.team3171.protos.XboxControllerStateOuterClass.XboxControllerState result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public frc.team3171.protos.XboxControllerStateOuterClass.XboxControllerState buildPartial() {
        frc.team3171.protos.XboxControllerStateOuterClass.XboxControllerState result = new frc.team3171.protos.XboxControllerStateOuterClass.XboxControllerState(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(frc.team3171.protos.XboxControllerStateOuterClass.XboxControllerState result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.leftX_ = leftX_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.leftY_ = leftY_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.rightX_ = rightX_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.rightY_ = rightY_;
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.leftTriggerAxis_ = leftTriggerAxis_;
          to_bitField0_ |= 0x00000010;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.rightTriggerAxis_ = rightTriggerAxis_;
          to_bitField0_ |= 0x00000020;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.pov_ = pov_;
          to_bitField0_ |= 0x00000040;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.aButton_ = aButton_;
          to_bitField0_ |= 0x00000080;
        }
        if (((from_bitField0_ & 0x00000100) != 0)) {
          result.bButton_ = bButton_;
          to_bitField0_ |= 0x00000100;
        }
        if (((from_bitField0_ & 0x00000200) != 0)) {
          result.xButton_ = xButton_;
          to_bitField0_ |= 0x00000200;
        }
        if (((from_bitField0_ & 0x00000400) != 0)) {
          result.yButton_ = yButton_;
          to_bitField0_ |= 0x00000400;
        }
        if (((from_bitField0_ & 0x00000800) != 0)) {
          result.startButton_ = startButton_;
          to_bitField0_ |= 0x00000800;
        }
        if (((from_bitField0_ & 0x00001000) != 0)) {
          result.backButton_ = backButton_;
          to_bitField0_ |= 0x00001000;
        }
        if (((from_bitField0_ & 0x00002000) != 0)) {
          result.leftBumper_ = leftBumper_;
          to_bitField0_ |= 0x00002000;
        }
        if (((from_bitField0_ & 0x00004000) != 0)) {
          result.rightBumper_ = rightBumper_;
          to_bitField0_ |= 0x00004000;
        }
        if (((from_bitField0_ & 0x00008000) != 0)) {
          result.leftStickButton_ = leftStickButton_;
          to_bitField0_ |= 0x00008000;
        }
        if (((from_bitField0_ & 0x00010000) != 0)) {
          result.rightStickButton_ = rightStickButton_;
          to_bitField0_ |= 0x00010000;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof frc.team3171.protos.XboxControllerStateOuterClass.XboxControllerState) {
          return mergeFrom((frc.team3171.protos.XboxControllerStateOuterClass.XboxControllerState)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(frc.team3171.protos.XboxControllerStateOuterClass.XboxControllerState other) {
        if (other == frc.team3171.protos.XboxControllerStateOuterClass.XboxControllerState.getDefaultInstance()) return this;
        if (other.hasLeftX()) {
          setLeftX(other.getLeftX());
        }
        if (other.hasLeftY()) {
          setLeftY(other.getLeftY());
        }
        if (other.hasRightX()) {
          setRightX(other.getRightX());
        }
        if (other.hasRightY()) {
          setRightY(other.getRightY());
        }
        if (other.hasLeftTriggerAxis()) {
          setLeftTriggerAxis(other.getLeftTriggerAxis());
        }
        if (other.hasRightTriggerAxis()) {
          setRightTriggerAxis(other.getRightTriggerAxis());
        }
        if (other.hasPov()) {
          setPov(other.getPov());
        }
        if (other.hasAButton()) {
          setAButton(other.getAButton());
        }
        if (other.hasBButton()) {
          setBButton(other.getBButton());
        }
        if (other.hasXButton()) {
          setXButton(other.getXButton());
        }
        if (other.hasYButton()) {
          setYButton(other.getYButton());
        }
        if (other.hasStartButton()) {
          setStartButton(other.getStartButton());
        }
        if (other.hasBackButton()) {
          setBackButton(other.getBackButton());
        }
        if (other.hasLeftBumper()) {
          setLeftBumper(other.getLeftBumper());
        }
        if (other.hasRightBumper()) {
          setRightBumper(other.getRightBumper());
        }
        if (other.hasLeftStickButton()) {
          setLeftStickButton(other.getLeftStickButton());
        }
        if (other.hasRightStickButton()) {
          setRightStickButton(other.getRightStickButton());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 9: {
                leftX_ = input.readDouble();
                bitField0_ |= 0x00000001;
                break;
              } // case 9
              case 17: {
                leftY_ = input.readDouble();
                bitField0_ |= 0x00000002;
                break;
              } // case 17
              case 25: {
                rightX_ = input.readDouble();
                bitField0_ |= 0x00000004;
                break;
              } // case 25
              case 33: {
                rightY_ = input.readDouble();
                bitField0_ |= 0x00000008;
                break;
              } // case 33
              case 41: {
                leftTriggerAxis_ = input.readDouble();
                bitField0_ |= 0x00000010;
                break;
              } // case 41
              case 49: {
                rightTriggerAxis_ = input.readDouble();
                bitField0_ |= 0x00000020;
                break;
              } // case 49
              case 56: {
                pov_ = input.readInt32();
                bitField0_ |= 0x00000040;
                break;
              } // case 56
              case 64: {
                aButton_ = input.readBool();
                bitField0_ |= 0x00000080;
                break;
              } // case 64
              case 72: {
                bButton_ = input.readBool();
                bitField0_ |= 0x00000100;
                break;
              } // case 72
              case 80: {
                xButton_ = input.readBool();
                bitField0_ |= 0x00000200;
                break;
              } // case 80
              case 88: {
                yButton_ = input.readBool();
                bitField0_ |= 0x00000400;
                break;
              } // case 88
              case 96: {
                startButton_ = input.readBool();
                bitField0_ |= 0x00000800;
                break;
              } // case 96
              case 104: {
                backButton_ = input.readBool();
                bitField0_ |= 0x00001000;
                break;
              } // case 104
              case 112: {
                leftBumper_ = input.readBool();
                bitField0_ |= 0x00002000;
                break;
              } // case 112
              case 120: {
                rightBumper_ = input.readBool();
                bitField0_ |= 0x00004000;
                break;
              } // case 120
              case 128: {
                leftStickButton_ = input.readBool();
                bitField0_ |= 0x00008000;
                break;
              } // case 128
              case 136: {
                rightStickButton_ = input.readBool();
                bitField0_ |= 0x00010000;
                break;
              } // case 136
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private double leftX_ ;
      /**
       * <code>optional double leftX = 1;</code>
       * @return Whether the leftX field is set.
       */
      @java.lang.Override
      public boolean hasLeftX() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional double leftX = 1;</code>
       * @return The leftX.
       */
      @java.lang.Override
      public double getLeftX() {
        return leftX_;
      }
      /**
       * <code>optional double leftX = 1;</code>
       * @param value The leftX to set.
       * @return This builder for chaining.
       */
      public Builder setLeftX(double value) {

        leftX_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>optional double leftX = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearLeftX() {
        bitField0_ = (bitField0_ & ~0x00000001);
        leftX_ = 0D;
        onChanged();
        return this;
      }

      private double leftY_ ;
      /**
       * <code>optional double leftY = 2;</code>
       * @return Whether the leftY field is set.
       */
      @java.lang.Override
      public boolean hasLeftY() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional double leftY = 2;</code>
       * @return The leftY.
       */
      @java.lang.Override
      public double getLeftY() {
        return leftY_;
      }
      /**
       * <code>optional double leftY = 2;</code>
       * @param value The leftY to set.
       * @return This builder for chaining.
       */
      public Builder setLeftY(double value) {

        leftY_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional double leftY = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearLeftY() {
        bitField0_ = (bitField0_ & ~0x00000002);
        leftY_ = 0D;
        onChanged();
        return this;
      }

      private double rightX_ ;
      /**
       * <code>optional double rightX = 3;</code>
       * @return Whether the rightX field is set.
       */
      @java.lang.Override
      public boolean hasRightX() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional double rightX = 3;</code>
       * @return The rightX.
       */
      @java.lang.Override
      public double getRightX() {
        return rightX_;
      }
      /**
       * <code>optional double rightX = 3;</code>
       * @param value The rightX to set.
       * @return This builder for chaining.
       */
      public Builder setRightX(double value) {

        rightX_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>optional double rightX = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearRightX() {
        bitField0_ = (bitField0_ & ~0x00000004);
        rightX_ = 0D;
        onChanged();
        return this;
      }

      private double rightY_ ;
      /**
       * <code>optional double rightY = 4;</code>
       * @return Whether the rightY field is set.
       */
      @java.lang.Override
      public boolean hasRightY() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>optional double rightY = 4;</code>
       * @return The rightY.
       */
      @java.lang.Override
      public double getRightY() {
        return rightY_;
      }
      /**
       * <code>optional double rightY = 4;</code>
       * @param value The rightY to set.
       * @return This builder for chaining.
       */
      public Builder setRightY(double value) {

        rightY_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>optional double rightY = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearRightY() {
        bitField0_ = (bitField0_ & ~0x00000008);
        rightY_ = 0D;
        onChanged();
        return this;
      }

      private double leftTriggerAxis_ ;
      /**
       * <code>optional double leftTriggerAxis = 5;</code>
       * @return Whether the leftTriggerAxis field is set.
       */
      @java.lang.Override
      public boolean hasLeftTriggerAxis() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <code>optional double leftTriggerAxis = 5;</code>
       * @return The leftTriggerAxis.
       */
      @java.lang.Override
      public double getLeftTriggerAxis() {
        return leftTriggerAxis_;
      }
      /**
       * <code>optional double leftTriggerAxis = 5;</code>
       * @param value The leftTriggerAxis to set.
       * @return This builder for chaining.
       */
      public Builder setLeftTriggerAxis(double value) {

        leftTriggerAxis_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>optional double leftTriggerAxis = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearLeftTriggerAxis() {
        bitField0_ = (bitField0_ & ~0x00000010);
        leftTriggerAxis_ = 0D;
        onChanged();
        return this;
      }

      private double rightTriggerAxis_ ;
      /**
       * <code>optional double rightTriggerAxis = 6;</code>
       * @return Whether the rightTriggerAxis field is set.
       */
      @java.lang.Override
      public boolean hasRightTriggerAxis() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <code>optional double rightTriggerAxis = 6;</code>
       * @return The rightTriggerAxis.
       */
      @java.lang.Override
      public double getRightTriggerAxis() {
        return rightTriggerAxis_;
      }
      /**
       * <code>optional double rightTriggerAxis = 6;</code>
       * @param value The rightTriggerAxis to set.
       * @return This builder for chaining.
       */
      public Builder setRightTriggerAxis(double value) {

        rightTriggerAxis_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>optional double rightTriggerAxis = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearRightTriggerAxis() {
        bitField0_ = (bitField0_ & ~0x00000020);
        rightTriggerAxis_ = 0D;
        onChanged();
        return this;
      }

      private int pov_ ;
      /**
       * <code>optional int32 pov = 7;</code>
       * @return Whether the pov field is set.
       */
      @java.lang.Override
      public boolean hasPov() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <code>optional int32 pov = 7;</code>
       * @return The pov.
       */
      @java.lang.Override
      public int getPov() {
        return pov_;
      }
      /**
       * <code>optional int32 pov = 7;</code>
       * @param value The pov to set.
       * @return This builder for chaining.
       */
      public Builder setPov(int value) {

        pov_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 pov = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearPov() {
        bitField0_ = (bitField0_ & ~0x00000040);
        pov_ = 0;
        onChanged();
        return this;
      }

      private boolean aButton_ ;
      /**
       * <code>optional bool aButton = 8;</code>
       * @return Whether the aButton field is set.
       */
      @java.lang.Override
      public boolean hasAButton() {
        return ((bitField0_ & 0x00000080) != 0);
      }
      /**
       * <code>optional bool aButton = 8;</code>
       * @return The aButton.
       */
      @java.lang.Override
      public boolean getAButton() {
        return aButton_;
      }
      /**
       * <code>optional bool aButton = 8;</code>
       * @param value The aButton to set.
       * @return This builder for chaining.
       */
      public Builder setAButton(boolean value) {

        aButton_ = value;
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool aButton = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearAButton() {
        bitField0_ = (bitField0_ & ~0x00000080);
        aButton_ = false;
        onChanged();
        return this;
      }

      private boolean bButton_ ;
      /**
       * <code>optional bool bButton = 9;</code>
       * @return Whether the bButton field is set.
       */
      @java.lang.Override
      public boolean hasBButton() {
        return ((bitField0_ & 0x00000100) != 0);
      }
      /**
       * <code>optional bool bButton = 9;</code>
       * @return The bButton.
       */
      @java.lang.Override
      public boolean getBButton() {
        return bButton_;
      }
      /**
       * <code>optional bool bButton = 9;</code>
       * @param value The bButton to set.
       * @return This builder for chaining.
       */
      public Builder setBButton(boolean value) {

        bButton_ = value;
        bitField0_ |= 0x00000100;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool bButton = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearBButton() {
        bitField0_ = (bitField0_ & ~0x00000100);
        bButton_ = false;
        onChanged();
        return this;
      }

      private boolean xButton_ ;
      /**
       * <code>optional bool xButton = 10;</code>
       * @return Whether the xButton field is set.
       */
      @java.lang.Override
      public boolean hasXButton() {
        return ((bitField0_ & 0x00000200) != 0);
      }
      /**
       * <code>optional bool xButton = 10;</code>
       * @return The xButton.
       */
      @java.lang.Override
      public boolean getXButton() {
        return xButton_;
      }
      /**
       * <code>optional bool xButton = 10;</code>
       * @param value The xButton to set.
       * @return This builder for chaining.
       */
      public Builder setXButton(boolean value) {

        xButton_ = value;
        bitField0_ |= 0x00000200;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool xButton = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearXButton() {
        bitField0_ = (bitField0_ & ~0x00000200);
        xButton_ = false;
        onChanged();
        return this;
      }

      private boolean yButton_ ;
      /**
       * <code>optional bool yButton = 11;</code>
       * @return Whether the yButton field is set.
       */
      @java.lang.Override
      public boolean hasYButton() {
        return ((bitField0_ & 0x00000400) != 0);
      }
      /**
       * <code>optional bool yButton = 11;</code>
       * @return The yButton.
       */
      @java.lang.Override
      public boolean getYButton() {
        return yButton_;
      }
      /**
       * <code>optional bool yButton = 11;</code>
       * @param value The yButton to set.
       * @return This builder for chaining.
       */
      public Builder setYButton(boolean value) {

        yButton_ = value;
        bitField0_ |= 0x00000400;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool yButton = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearYButton() {
        bitField0_ = (bitField0_ & ~0x00000400);
        yButton_ = false;
        onChanged();
        return this;
      }

      private boolean startButton_ ;
      /**
       * <code>optional bool startButton = 12;</code>
       * @return Whether the startButton field is set.
       */
      @java.lang.Override
      public boolean hasStartButton() {
        return ((bitField0_ & 0x00000800) != 0);
      }
      /**
       * <code>optional bool startButton = 12;</code>
       * @return The startButton.
       */
      @java.lang.Override
      public boolean getStartButton() {
        return startButton_;
      }
      /**
       * <code>optional bool startButton = 12;</code>
       * @param value The startButton to set.
       * @return This builder for chaining.
       */
      public Builder setStartButton(boolean value) {

        startButton_ = value;
        bitField0_ |= 0x00000800;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool startButton = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearStartButton() {
        bitField0_ = (bitField0_ & ~0x00000800);
        startButton_ = false;
        onChanged();
        return this;
      }

      private boolean backButton_ ;
      /**
       * <code>optional bool backButton = 13;</code>
       * @return Whether the backButton field is set.
       */
      @java.lang.Override
      public boolean hasBackButton() {
        return ((bitField0_ & 0x00001000) != 0);
      }
      /**
       * <code>optional bool backButton = 13;</code>
       * @return The backButton.
       */
      @java.lang.Override
      public boolean getBackButton() {
        return backButton_;
      }
      /**
       * <code>optional bool backButton = 13;</code>
       * @param value The backButton to set.
       * @return This builder for chaining.
       */
      public Builder setBackButton(boolean value) {

        backButton_ = value;
        bitField0_ |= 0x00001000;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool backButton = 13;</code>
       * @return This builder for chaining.
       */
      public Builder clearBackButton() {
        bitField0_ = (bitField0_ & ~0x00001000);
        backButton_ = false;
        onChanged();
        return this;
      }

      private boolean leftBumper_ ;
      /**
       * <code>optional bool leftBumper = 14;</code>
       * @return Whether the leftBumper field is set.
       */
      @java.lang.Override
      public boolean hasLeftBumper() {
        return ((bitField0_ & 0x00002000) != 0);
      }
      /**
       * <code>optional bool leftBumper = 14;</code>
       * @return The leftBumper.
       */
      @java.lang.Override
      public boolean getLeftBumper() {
        return leftBumper_;
      }
      /**
       * <code>optional bool leftBumper = 14;</code>
       * @param value The leftBumper to set.
       * @return This builder for chaining.
       */
      public Builder setLeftBumper(boolean value) {

        leftBumper_ = value;
        bitField0_ |= 0x00002000;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool leftBumper = 14;</code>
       * @return This builder for chaining.
       */
      public Builder clearLeftBumper() {
        bitField0_ = (bitField0_ & ~0x00002000);
        leftBumper_ = false;
        onChanged();
        return this;
      }

      private boolean rightBumper_ ;
      /**
       * <code>optional bool rightBumper = 15;</code>
       * @return Whether the rightBumper field is set.
       */
      @java.lang.Override
      public boolean hasRightBumper() {
        return ((bitField0_ & 0x00004000) != 0);
      }
      /**
       * <code>optional bool rightBumper = 15;</code>
       * @return The rightBumper.
       */
      @java.lang.Override
      public boolean getRightBumper() {
        return rightBumper_;
      }
      /**
       * <code>optional bool rightBumper = 15;</code>
       * @param value The rightBumper to set.
       * @return This builder for chaining.
       */
      public Builder setRightBumper(boolean value) {

        rightBumper_ = value;
        bitField0_ |= 0x00004000;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool rightBumper = 15;</code>
       * @return This builder for chaining.
       */
      public Builder clearRightBumper() {
        bitField0_ = (bitField0_ & ~0x00004000);
        rightBumper_ = false;
        onChanged();
        return this;
      }

      private boolean leftStickButton_ ;
      /**
       * <code>optional bool leftStickButton = 16;</code>
       * @return Whether the leftStickButton field is set.
       */
      @java.lang.Override
      public boolean hasLeftStickButton() {
        return ((bitField0_ & 0x00008000) != 0);
      }
      /**
       * <code>optional bool leftStickButton = 16;</code>
       * @return The leftStickButton.
       */
      @java.lang.Override
      public boolean getLeftStickButton() {
        return leftStickButton_;
      }
      /**
       * <code>optional bool leftStickButton = 16;</code>
       * @param value The leftStickButton to set.
       * @return This builder for chaining.
       */
      public Builder setLeftStickButton(boolean value) {

        leftStickButton_ = value;
        bitField0_ |= 0x00008000;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool leftStickButton = 16;</code>
       * @return This builder for chaining.
       */
      public Builder clearLeftStickButton() {
        bitField0_ = (bitField0_ & ~0x00008000);
        leftStickButton_ = false;
        onChanged();
        return this;
      }

      private boolean rightStickButton_ ;
      /**
       * <code>optional bool rightStickButton = 17;</code>
       * @return Whether the rightStickButton field is set.
       */
      @java.lang.Override
      public boolean hasRightStickButton() {
        return ((bitField0_ & 0x00010000) != 0);
      }
      /**
       * <code>optional bool rightStickButton = 17;</code>
       * @return The rightStickButton.
       */
      @java.lang.Override
      public boolean getRightStickButton() {
        return rightStickButton_;
      }
      /**
       * <code>optional bool rightStickButton = 17;</code>
       * @param value The rightStickButton to set.
       * @return This builder for chaining.
       */
      public Builder setRightStickButton(boolean value) {

        rightStickButton_ = value;
        bitField0_ |= 0x00010000;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool rightStickButton = 17;</code>
       * @return This builder for chaining.
       */
      public Builder clearRightStickButton() {
        bitField0_ = (bitField0_ & ~0x00010000);
        rightStickButton_ = false;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:frc.team3171.protos.XboxControllerState)
    }

    // @@protoc_insertion_point(class_scope:frc.team3171.protos.XboxControllerState)
    private static final frc.team3171.protos.XboxControllerStateOuterClass.XboxControllerState DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new frc.team3171.protos.XboxControllerStateOuterClass.XboxControllerState();
    }

    public static frc.team3171.protos.XboxControllerStateOuterClass.XboxControllerState getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<XboxControllerState>
        PARSER = new com.google.protobuf.AbstractParser<XboxControllerState>() {
      @java.lang.Override
      public XboxControllerState parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<XboxControllerState> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<XboxControllerState> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public frc.team3171.protos.XboxControllerStateOuterClass.XboxControllerState getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_frc_team3171_protos_XboxControllerState_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_frc_team3171_protos_XboxControllerState_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n/frc/team3171/protos/xbox_controller_st" +
      "ate.proto\022\023frc.team3171.protos\"\243\005\n\023XboxC" +
      "ontrollerState\022\022\n\005leftX\030\001 \001(\001H\000\210\001\001\022\022\n\005le" +
      "ftY\030\002 \001(\001H\001\210\001\001\022\023\n\006rightX\030\003 \001(\001H\002\210\001\001\022\023\n\006r" +
      "ightY\030\004 \001(\001H\003\210\001\001\022\034\n\017leftTriggerAxis\030\005 \001(" +
      "\001H\004\210\001\001\022\035\n\020rightTriggerAxis\030\006 \001(\001H\005\210\001\001\022\020\n" +
      "\003pov\030\007 \001(\005H\006\210\001\001\022\024\n\007aButton\030\010 \001(\010H\007\210\001\001\022\024\n" +
      "\007bButton\030\t \001(\010H\010\210\001\001\022\024\n\007xButton\030\n \001(\010H\t\210\001" +
      "\001\022\024\n\007yButton\030\013 \001(\010H\n\210\001\001\022\030\n\013startButton\030\014" +
      " \001(\010H\013\210\001\001\022\027\n\nbackButton\030\r \001(\010H\014\210\001\001\022\027\n\nle" +
      "ftBumper\030\016 \001(\010H\r\210\001\001\022\030\n\013rightBumper\030\017 \001(\010" +
      "H\016\210\001\001\022\034\n\017leftStickButton\030\020 \001(\010H\017\210\001\001\022\035\n\020r" +
      "ightStickButton\030\021 \001(\010H\020\210\001\001B\010\n\006_leftXB\010\n\006" +
      "_leftYB\t\n\007_rightXB\t\n\007_rightYB\022\n\020_leftTri" +
      "ggerAxisB\023\n\021_rightTriggerAxisB\006\n\004_povB\n\n" +
      "\010_aButtonB\n\n\010_bButtonB\n\n\010_xButtonB\n\n\010_yB" +
      "uttonB\016\n\014_startButtonB\r\n\013_backButtonB\r\n\013" +
      "_leftBumperB\016\n\014_rightBumperB\022\n\020_leftStic" +
      "kButtonB\023\n\021_rightStickButtonb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_frc_team3171_protos_XboxControllerState_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_frc_team3171_protos_XboxControllerState_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_frc_team3171_protos_XboxControllerState_descriptor,
        new java.lang.String[] { "LeftX", "LeftY", "RightX", "RightY", "LeftTriggerAxis", "RightTriggerAxis", "Pov", "AButton", "BButton", "XButton", "YButton", "StartButton", "BackButton", "LeftBumper", "RightBumper", "LeftStickButton", "RightStickButton", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
